namespace MutateCSharp
{
  public static class Schemata
  {
    private static bool _initialised;
    private static int _specifiedMutantId;

    private static void Initialise()
    {
      if (_initialised) return;
      var activatedMutant = Environment.GetEnvironmentVariable("MUTATE_CSHARP_ACTIVATED_MUTANT");
      if (!string.IsNullOrEmpty(activatedMutant)) _specifiedMutantId = int.Parse(activatedMutant);
      _initialised = true;
    }
    
    private static bool ActivatedInRange(int lowerBound, int upperBound)
    {
      Initialise();
      return lowerBound <= _specifiedMutantId && _specifiedMutantId <= upperBound;
    }

    private static bool Activated(int mutantId) => mutantId == _specifiedMutantId;
  }
}

namespace FileScopedNamespace
{
  public class Program
  {
    static void Main()
    {
    }
  }
}
